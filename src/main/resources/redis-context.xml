<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="false">
	
	<!-- context:property-placeholder location="redis.properties" -->
	
	<bean id="redisPropertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="2"/>
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="location" value="classpath:redis.properties"></property>
	</bean>
	
	<!-- 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.client.jedis.JedisPoolConfig">
		<!-- 连接池中最大连接数。高版本：maxTotal,低版本:maxAction -->
		<property name="maxTotal" value="${redis.maxTotal}"/>
		<!-- 连接池最大空闲的连接数 -->
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<!-- 连接池中最少空闲连接数 -->
		<property name="minIdle" value="${redis.minIdle}"/>
		<!-- 当连接池资源耗尽时，调用最大阻塞时间，超时将抛出异常。单位，毫秒数，默认为-1.表示永不超时。高版本
		：maxWaitMillis,低版本maxWait -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
		<!-- 连接空闲的最小时间，达到此值后空闲连接可能会被移除。负值(-1)表示不移除 -->
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}"/>
		<!-- 对于"空闲链接"检测线程而言，每次检测的链接资源的个数。默认为3 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}"></property>
		<!-- "空闲链接 "检测线程，检测的周期，毫秒数。如果为负值,表示不运行"检测线程"。默认为-1-->
		<property name="timeBetweenEvictionRunsMillis" value="${reids.timeBetweenEvictionRunsMillis}"/>
		<!-- testOnBorrow:向调用者输出“链接”资源时，是否检测是有有效，如果无效则从连接池中移除，并尝试获取继续获取。默认为false。建议保持默认值. -->
		<!-- testOnReturn:向连接池“归还”链接时，是否检测“链接”对象的有效性。默认为false。建议保持默认值. -->
		<!-- testWhileIdle:向调用者输出“链接”对象时，是否检测它的空闲超时；默认为false。如果“链接”空闲超时，将会被移除。建议保持默认值. -->
		<!-- whenExhaustedAction:当“连接池”中active数量达到阀值时，即“链接”资源耗尽时，连接池需要采取的手段, 默认为1(0:抛出异常。1:阻塞，直到有可用链接资源。2:强制创建新的链接资源) -->
	</bean>
	<!-- spring提供的redis连接工厂-->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
		<!-- 连接池配置 -->
		<property name="poolConfig" ref="jedisPoolConfig"/>
		<!-- redis服务主机 -->
		<property name="hostName" value="${redis.hostName}"></property>
		<!-- redis服务端口号 -->
		<property name="port" value="${redis.port}"></property>
		<!-- redis连接服务密码，英文没有设置密码，所以省略配置 -->
		<!-- 连超时设置 -->
		<property name="timeout" value="${redis.timeout}"></property>
		<!-- 是否使用连接池 -->
		<property name="usePool" value="${redis.usePool}"></property>
	</bean>
	<!-- spring提供的redis类 -->
	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.RedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>
		</property>
	</bean>
	
	
</beans>